kind: pipeline
type: docker
name: development

steps:
  - name: build-publish
    image: registry.gitlab.com/mwcaisse/drone-images/drone-docker:20.10.7
    volumes:
      - name: docker-socket
        path: /var/run/docker.sock
    settings:
      username:
        from_secret: gitlab-username
      password:
        from_secret: gitlab-password
      repo: registry.gitlab.com/mwcaisse/application-images/strong-data-viz
      registry: registry.gitlab.com
      tags:
        - '${DRONE_COMMIT}'
        - latest

  - name: deploy-to-dev
    image: registry.gitlab.com/mwcaisse/drone-images/drone-k8s-deploy
    settings:
      template: k8s.dev.yml
      namespace: dev
      server:
        from_secret: k8s-server
      token:
        from_secret: k8s-token
      ca:
        from_secret: k8s-ca
      tv_image_tag: '${DRONE_COMMIT}'
    when:
      branch:
        - master

volumes:
  - name: docker-socket
    host:
      path: /var/run/docker.sock

image_pull_secrets:
  - docker-auth-config

---
kind: secret
name: gitlab-username
get:
  path: drone/data/gitlab
  name: username

---
kind: secret
name: gitlab-password
get:
  path: drone/data/gitlab
  name: access-token

---
kind: secret
name: docker-auth-config
get:
  path: drone/data/docker
  name: auth

---
kind: secret
name: k8s-server
get:
  path: drone/data/mwcaisse-k8s
  name: server

---
kind: secret
name: k8s-token
get:
  path: drone/data/mwcaisse-k8s
  name: dev-access-token

---
kind: secret
name: k8s-ca
get:
  path: drone/data/mwcaisse-k8s
  name: cluster-certificate


